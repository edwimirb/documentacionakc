--METODO POST ANDROID
/*private Intent getIntent() {
		// TODO Auto-generated method stub
		return null;
	}

	private class MiTareaPost extends AsyncTask<String, Float, String> {
        //private static final String APP_TAG = null;
		private String jsonObject;
        private final String HTTP_EVENT;
        private HttpClient httpclient;
        BufferedReader in = null;
        List<NameValuePair> params;

       // String params;
        
        
    	
        
        public MiTareaPost(String url,List<NameValuePair> params) {
        //public MiTareaPost(String url,String datos){
            this.HTTP_EVENT=url;//Url del servicios
            this.params=params;//Parametros
            System.out.println("aqui-servicio -- parametros"+url+params );
        }
        
        protected void onPreExecute() {

        }

        protected String doInBackground(String... urls){
            String resul = "";
            
            try {
                HttpClient httpClient = new DefaultHttpClient();
                HttpPost post = new HttpPost(HTTP_EVENT);
                //HttpPost post = new HttpPost(resul);
                //StringEntity stringEntity = new StringEntity( jsonObject);
                
               //post.setHeader("Content-type", "application/x-www-form-urlencoded");//Formato header de envío de datos
                //post.setHeader("Content-type", "application/json");
                post.setEntity(new UrlEncodedFormEntity(params,"utf-8"));
                //post.setEntity(new UrlEncodedFormEntity(params, HTTP.UTF_8));
                //post.setEntity(stringEntity);
                HttpResponse response = httpClient.execute(post);
                in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
                StringBuffer sb = new StringBuffer("");
                String line = "";
                String NL = System.getProperty("line.separator");
                while ((line = in.readLine()) != null) {
                    sb.append(line + NL);
                }
                resul=sb.toString();

            } catch (ClientProtocolException e) {
                e.printStackTrace();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            return resul;
        }

        protected void onProgressUpdate (Float... valores) {
        	//Log.w(APP_TAG,"Indicador de pregreso " + valores[0].toString());
        }

        protected void onPostExecute(String tiraJson) {
            repuestaPeticio(tiraJson);
            //System.out.println("despues de consumir servicio -->" + tiraJson);//metodo a ejecutar despues de consumir el servicio
        }
        private StringBuilder inputStreamToString(InputStream is) {
            String line = "";
            StringBuilder stringBuilder = new StringBuilder();
            BufferedReader rd = new BufferedReader( new InputStreamReader(is) );
            try{
                while( (line = rd.readLine()) != null ){
                    stringBuilder.append(line);
                }
            }catch( IOException e){
                e.printStackTrace();
            }
            return stringBuilder;
        }

    }*/

//////////////////////////////////////////////////////////////////////
//metodo get
	public String enviardatosget(String contrato, String precinto, String usuario) {
		
	    
    	
		URL url =null;
		String resul;
		try {
			HttpClient httpClient = new DefaultHttpClient();
           
			//url = new URL("http://10.0.10.19:8080/open/servlet/datamap/precintoHistorico/"+contrato+"/"+precinto+"/"+usuario);
			System.out.println("url-->"+url);
			 HttpGet get = new HttpGet("http://10.0.10.19:8080/open/servlet/datamap/precintoHistorico/"+contrato+"/"+precinto+"/"+usuario);
			 HttpResponse response = httpClient.execute(get);
			 
			 
		} catch (Exception e) {
			// TODO: handle exception
			System.out.println("metodoget--"+ e);
		}
		
		
		
		
		return resul="Exito";
	}*/